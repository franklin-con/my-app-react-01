{"version":3,"sources":["componentes/Micomponente1.js","componentes/C01Saludo.js","componentes/C02Contador.js","componentes/C03OperadorTercario.js","componentes/C04Matriz.js","componentes/C06Tiempo.js","componentes/C07Estado.js","componentes/C08AñadirTexto.js","componentes/Examen/C01Llamada.js","componentes/Examen/C02Numero.js","componentes/Examen/C04Estado.js","componentes/Examen/C03Matriz.js","componentes/Examen/C05Matriz2.js","App.js","serviceWorker.js","index.js"],"names":["Micomponente1","Saludo","msj","variable","Contador","useState","valor","setValor","numero","setNumero","class","onClick","console","log","Operador","Matriz","lista","map","item","index","key","Cargando","isCargando","setIsCargando","setTimeout","C07Estado","props","state","seconds","this","setState","interval","setInterval","tick","clearInterval","Component","ReactDOM","render","document","getElementById","C08AñadirTexto","items","text","handleChange","bind","handleSubmit","onSubmit","htmlFor","id","onChange","value","length","e","target","preventDefault","newItem","Date","now","concat","React","TodoList","Llamada","Numero","Contador2","Array","Matriz2","setlista","dias","setDias","texto","App","Boolean","window","location","hostname","match","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.be0c8e53.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Micomponente1 = () => {\r\n    return( <h1>Hola este es mi componente xd</h1> );\r\n}\r\nexport default Micomponente1;","import React from 'react';\r\n\r\nconst Saludo=(msj) =>{\r\n    return(\r\n        <div>\r\n            <h1>HOLA MUNDO DESDE REACT...</h1>\r\n        <h2>Mensaje: {msj.variable} </h2>\r\n        </div>\r\n    )\r\n}\r\nexport default Saludo;","import React, { useState, Fragment } from 'react';\r\n\r\nconst Contador = () => {\r\n    const [valor, setValor] = useState(0);\r\n    const [numero, setNumero] = useState(0);\r\n\r\n    const IncrementoDos = () =>{\r\n        setNumero(numero+1);\r\n        console.log(\"Mensaje de contador\");\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <button class=\"btn btn-info\" onClick={()=> setValor(valor + 1)}>Contador 1</button>\r\n            <span>Incremento de contador 1: {valor}</span>\r\n            <hr/>\r\n            <button class=\"btn btn-warning\" onClick={IncrementoDos}>Contador 2</button>\r\n            <span>Incremento de Contador 2: {numero}</span>\r\n        </Fragment>\r\n\r\n        //<Fragment>\r\n        //<button onClick={()=> setValor(valor + 1)}>Contador 1</button>\r\n        //<span>Incremento de contador 1: {valor}</span>\r\n        //<hr/>\r\n        //<button onClick={IncrementoDos}>Contador 2</button>\r\n        //<span>Incremento de Contador 2: {numero}</span>\r\n        //</Fragment>\r\n    )\r\n}\r\n\r\nexport default Contador;","import React, {Fragment} from 'react';\r\n\r\nconst Operador = () => {\r\n    const edad=18;\r\n    return (\r\n        <Fragment>\r\n            <h1>Operador Ternario...</h1>\r\n            {edad >= 18? 'Mayor de Edad': 'Menor de Edad'}\r\n        </Fragment>\r\n    );\r\n}\r\n \r\nexport default Operador;","import React, {useState, Fragment} from 'react';\r\n\r\nconst Matriz = () => {\r\n    const [lista, setLista]=useState([1,2,3,4,5])\r\n    return (\r\n        <Fragment>\r\n            <h1>Lectura sin index ysin html</h1>\r\n            {lista.map ((item)=>item)}\r\n            <hr/>\r\n            <h1>Lectura sin index y con html</h1>\r\n            {lista.map((item)=> <spam>{item}</spam>)}\r\n            <hr/>\r\n            <h1>Listas con index y sin Key</h1>\r\n            {\r\n                lista.map((item,index)=>\r\n                    <p>{item} - {index}</p>\r\n                )\r\n            }\r\n            <hr/>\r\n            <h1>Listas con index y con Key</h1>\r\n            {\r\n                lista.map((item,index)=>\r\n            <p key = {index}>{item}-{item}</p>\r\n                )\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n \r\nexport default Matriz;","import React, {useState} from \"react\";\r\n\r\nexport default function Cargando(){\r\n  const [isCargando, setIsCargando] = useState(true);\r\n  \r\n  setTimeout (() =>{\r\n    setIsCargando(false)\r\n  }, 20000);\r\n\r\n  return(\r\n    <div>\r\n      <h5>{isCargando? (\"Cargando...\") : (\"Listo\")}</h5>\r\n    </div>\r\n  )\r\n}","import React, {Component} from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass C07Estado extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { seconds: 0 };\r\n    }\r\n  \r\n    tick() {\r\n      this.setState(state => ({\r\n        seconds: state.seconds + 1\r\n      }));\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          Segundos: {this.state.seconds}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  ReactDOM.render(\r\n    <C07Estado />,\r\n    document.getElementById('root')\r\n  );\r\n\r\n  export default C07Estado","import React, {Component} from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass C08AñadirTexto extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { items: [], text: '' };\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <h3>Apuntes</h3>\r\n          <TodoList items={this.state.items} />\r\n          <form onSubmit={this.handleSubmit}>\r\n            <label htmlFor=\"new-todo\">\r\n              ¿Qué se necesita hacer?\r\n            </label>\r\n            <input\r\n              id=\"new-todo\"\r\n              onChange={this.handleChange}\r\n              value={this.state.text}\r\n            />\r\n            <button class=\"btn btn-primary\">\r\n              Añadir {this.state.items.length + 1}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    handleChange(e) {\r\n      this.setState({ text: e.target.value });\r\n    }\r\n  \r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      if (this.state.text.length === 0) {\r\n        return;\r\n      }\r\n      const newItem = {\r\n        text: this.state.text,\r\n        id: Date.now()\r\n      };\r\n      this.setState(state => ({\r\n        items: state.items.concat(newItem),\r\n        text: ''\r\n      }));\r\n    }\r\n  }\r\n  \r\n  class TodoList extends React.Component {\r\n    render() {\r\n      return (\r\n        <ul>\r\n          {this.props.items.map(item => (\r\n            <li key={item.id}>{item.text}</li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n  \r\n  ReactDOM.render(\r\n    <C08AñadirTexto />,\r\n    document.getElementById('root')\r\n  );\r\n\r\n  export default C08AñadirTexto","import React from 'react'\r\n\r\nconst Llamada = () => {\r\n    \r\n    return( \r\n    <h5>\r\n        <marquee><button class=\"btn btn-warning\">PRIMERA LLAMADA</button> <br/></marquee>\r\n        \"Programar sin una arquitectura o diseño en mente es como explorar una gruta sólo con una linterna: no sabes dónde estás, dónde has estado ni hacia dónde vas”  – <b>Danny Thorpe</b>\r\n    </h5> );\r\n}\r\nexport default Llamada;","import React, {Component} from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Numero extends Component {\r\n    \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { seconds: 0 };\r\n    }\r\n  \r\n    tick() {\r\n      this.setState(state => ({\r\n        seconds: state.seconds + 1\r\n      }));\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n            Segundos: {this.state.seconds}\r\n        </div>\r\n        \r\n      );\r\n    }\r\n  }\r\n  \r\n  ReactDOM.render(\r\n    <Numero />,\r\n    document.getElementById('root')\r\n  );\r\n\r\n  export default Numero","import React, { useState, Fragment } from 'react';\r\n\r\nconst Contador2 = () => {\r\n    const [valor, setValor] = useState(0);\r\n    const [numero, setNumero] = useState(0);\r\n\r\n    const IncrementoDos = () =>{\r\n        setNumero(numero+5);\r\n        console.log(\"Mensaje de contador\");\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <button class=\"btn btn-info\" onClick={()=> setValor(valor -5)}>Contador -5</button>\r\n            <span>Incremento de contador 1: {valor}</span>\r\n            <hr/>\r\n            <button class=\"btn btn-warning\" onClick={IncrementoDos}>Contador +5</button>\r\n            <span>Incremento de Contador 2: {numero}</span>\r\n        </Fragment>\r\n\r\n        //<Fragment>\r\n        //<button onClick={()=> setValor(valor + 1)}>Contador 1</button>\r\n        //<span>Incremento de contador 1: {valor}</span>\r\n        //<hr/>\r\n        //<button onClick={IncrementoDos}>Contador 2</button>\r\n        //<span>Incremento de Contador 2: {numero}</span>\r\n        //</Fragment>\r\n    )\r\n}\r\n\r\nexport default Contador2;","import React, {Component} from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Array extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { items: [], text: '' };\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <h3>Array de Apuntes</h3>\r\n          <TodoList items={this.state.items} />\r\n          <form onSubmit={this.handleSubmit}>\r\n            <label htmlFor=\"new-todo\">\r\n              Escriba un Apunte\r\n            </label>\r\n            <input\r\n              id=\"new-todo\"\r\n              onChange={this.handleChange}\r\n              value={this.state.text}\r\n            />\r\n            <button class=\"btn btn-primary\">\r\n              Añadir {this.state.items.length + 1}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    handleChange(e) {\r\n      this.setState({ text: e.target.value });\r\n    }\r\n  \r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      if (this.state.text.length === 0) {\r\n        return;\r\n      }\r\n      const newItem = {\r\n        text: this.state.text,\r\n        id: Date.now()\r\n      };\r\n      this.setState(state => ({\r\n        items: state.items.concat(newItem),\r\n        text: ''\r\n      }));\r\n    }\r\n  }\r\n  \r\n  class TodoList extends React.Component {\r\n    render() {\r\n      return (\r\n        <ul>\r\n          {this.props.items.map(item => (\r\n            <li key={item.id}>{item.text}</li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n  \r\n  ReactDOM.render(\r\n    <Array />,\r\n    document.getElementById('root')\r\n  );\r\n\r\n  export default Array","import React, {useState, Fragment} from 'react';\r\n\r\nconst Matriz2 = () => {\r\n    const [lista, setlista] = useState([1,2,3,4,5]);\r\n    const [dias, setDias] = useState([\"Nº\",\"Nº\",\"Nº\",\"Nº\",\"Nº\"]);\r\n    const uniendoArray = [...lista, ...dias];\r\n\r\n    const [numero, setNumero] = useState(6);\r\n    const agregarNumero = () => {\r\n        //console.log(uniendoArray);\r\n        setNumero(numero + 10);\r\n        setlista([...lista,numero]);\r\n    }\r\n    const [texto, setTexto] = useState([\"Nº\",\"Nº\"]);\r\n    const agregarTexto = () => {\r\n        //setTexto(texto);\r\n        setDias([...dias,...texto]);\r\n    }\r\n    return (\r\n        <Fragment>\r\n            \r\n            <hr />\r\n            <h1>Agregar un valor a un array</h1>\r\n            <button onClick={agregarNumero}>Agregar numero</button>\r\n            {\r\n                lista.map((item, index) =>\r\n                    <p key = {index} > {item} - {index}</p>\r\n                )\r\n            }\r\n            <hr />\r\n            <h1>Agregar jugadores del barza</h1>\r\n            <button onClick={agregarTexto}>Agregar Numero</button>\r\n            {\r\n                dias.map((item, index) =>\r\n                    <p key = {index} > {item} - {index} </p>\r\n                )\r\n            }\r\n\r\n        </Fragment>\r\n    );\r\n}\r\nexport default Matriz2;","import React from 'react';\nimport Micomponente1 from './componentes/Micomponente1';\nimport Saludo from './componentes/C01Saludo';\nimport Contador from './componentes/C02Contador';\nimport Operador from './componentes/C03OperadorTercario';\nimport Matriz from './componentes/C04Matriz';\nimport Tiempo from './componentes/C06Tiempo';\nimport C07Estado from './componentes/C07Estado';\nimport C08AñadirTexto from './componentes/C08AñadirTexto';\n\nimport Llamada from './componentes/Examen/C01Llamada';\nimport Numero from './componentes/Examen/C02Numero'\nimport Contador2 from './componentes/Examen/C04Estado'\nimport Array from './componentes/Examen/C03Matriz'\nimport Matriz2 from './componentes/Examen/C05Matriz2'\n\nfunction App() {\n  return (\n    <div>\n      <header>\n      <div>\n        <h1>EXAMEN DISEÑO WEB</h1>\n        <hr/>\n        <Llamada/>\n        <hr/><hr/><hr/>\n        <h2>Numeros</h2>\n        <Numero/>\n        <Contador2/>\n        <hr/><hr/><hr/><hr/>\n        <h2>Arrays</h2>\n        <Array/>\n        <hr/><hr/>\n        <Matriz2/>\n        <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n      </div>\n      </header>\n      \n      <h1>Practicas en REACT</h1>\n      <hr/>\n      <Micomponente1/>\n      <hr/>\n      <Saludo/>\n      <hr/>\n      <Saludo variable=\"Nuevo Saludo\"/>\n      <hr/>\n      <Contador/>\n      <hr/>\n      <Operador/>\n      <hr/>\n      <Matriz/>\n      <hr/>\n      <h1>Estado de Cargando Durante 20 Segundos</h1>\n      <Tiempo/>\n      <hr/>\n      <h1>Contador de Tiempo en la Pagina</h1>\n      <C07Estado/>\n      <hr/>\n      <h1>Añade Textos</h1>\n      <C08AñadirTexto/>\n      <hr/>\n      <hr/>\n      <hr/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}